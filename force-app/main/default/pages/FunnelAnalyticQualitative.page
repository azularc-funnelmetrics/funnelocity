<apex:page sidebar="false" controller="FunnelAnalyticQualitativeController" lightningStyleSheets="true">
   <!--<script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>-->
    <apex:includeScript value="{!URLFOR($Resource.FunnelScriptFolder,'Design/jquery-1.11.3.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.SldsCss,'SldsResources/styles/salesforce-lightning-design-system.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.SldsCss,'SldsResources/styles/salesforce-lightning-design-system.min')}"/>
    
    <!--Navigation-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.8/css/solid.css" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.8/css/fontawesome.css" />
    <apex:includeScript value="{!URLFOR($Resource.FunnelScriptFolder,'Design/Highstocks.js')}"/>
     <!--<script type="text/javascript" src="http://code.highcharts.com/stock/highstock.js"></script> -->
    <!--Navigation-->
    <!-- <apex:slds />  -->
    <!--Navigation-->
    <style>
        body { font-size: 75%; }
        .noSidebarCell, .sidebarCell .fixed { padding: 10px; font-family: sldsFont; }
        
         @font-face {
         font-family: sldsFont;
             src: url({!URLFOR($Resource.SldsCss,'SldsResources/fonts/SalesforceSans-Light.ttf')});
         }
         
         
         .bPageHeader .phHeader td.left{display: block;}
        .navigation{display: table; width: 100%; text-align: center;}
    
        .navigation{display: table; width: 100%;}
        .navigation ul{margin: 0; padding: 0;}
        .navigation ul li{display: inline-block; padding: 0 8px; border-left: 2px solid #7e8793; line-height: 17px;; margin-left: 0;}
        .navigation ul li a{color: #7e8793; font-size: 17px; font-weight: bold;}
        .navigation ul li {color: #7e8793; font-size: 17px; font-weight: bold;}
        .navigation ul li:hover{color: #66cc33; text-decoration: none;}
        .navigation ul li a:hover{color: #66cc33; text-decoration: none;}
        .navigation ul li a:focus{outline: none; text-decoration: none;}
        .navigation ul li.selected {color: #66cc33;}
        .navigation ul li.home{border: none; padding-left: 0; margin-bottom: 10px;}
        .navigation ul li.home a{color: #00b2ee;}
        .navigation ul li:last-child{padding-right: 0;}
        
        .navigation ul li.scorenav a{background: url({!$Resource.CertificationNavigationIcon}) no-repeat; padding: 0 0 0 25px; background-position: 0 0; height: 19px; width: 20px;}
        .navigation ul li.scorenav a:hover {background-position: 0 -23px;}
        
        .navigation ul li.funnelanalyticsnav > a{background: url({!$Resource.AnalyticsNavigationIcon}) no-repeat; padding: 0 0 0 25px; background-position: 0 -17px; height: 19px; width: 20px; color: #66cc33;pointer-events: none;}
        .navigation ul li.funnelanalyticsnav > a:hover{background-position: 0 -17px; }

        .myapp{min-width: 500px; font-family: sldsFont;background-color: #fff; }
                
        .navigation ul li.reportnav{position: relative; display: inline-block; cursor: pointer;}
        .navigation ul li.reportnav ul.subnav{position: absolute; z-index: 2; width: 240px; background: #fff; box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2); display: none;}
        .navigation ul li.reportnav ul.subnav li{display: block; text-align: left; border: none; padding: 0;}
        .navigation ul li.reportnav ul.subnav li a {color: #7e8793; padding: 10px; display: block; width: 100%;}
        .navigation ul li.reportnav ul.subnav li a:hover{background: #66cc33; color: #fff;}
        .navigation ul li.reportnav:hover ul.subnav {display: block;}
        button a:hover{text-decoration: none;}
        button a:focus{text-decoration: none; outline: none;}
        select{background: url('{!URLFOR($Resource.Selectarrow )}') no-repeat right -20px center #fff !important; -moz-appearance: none; -webkit-appearance: none;}
       .slds-select[disabled], .slds-select.slds-is-disabled {background-color: #ecebea !important;border-color: #c9c7c5;cursor: not-allowed;-webkit-user-select: none;-moz-user-select: none;-ms-user-select: none;user-select: none;}
        
        a:hover{text-decoration:none !important;}
        a:focus{text-decoration:none !important;}
    </style>
     <style>
        /* Add this attribute to the element that needs a tooltip */
        [data-tooltip] {
          position: relative;
          z-index: 2;
          cursor: pointer;
        }
        
        /* Hide the tooltip content by default */
        [data-tooltip]:before,
        [data-tooltip]:after {
          visibility: hidden;
          -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
          filter: progid: DXImageTransform.Microsoft.Alpha(Opacity=0);
          opacity: 0;
          pointer-events: none;
        }
        
        /* Position tooltip above the element */
        .metrictable [data-tooltip]:before {width: 120px; }
        [data-tooltip]:before {
          position: absolute;
          bottom: 100%;
          left: 45%;
          margin-bottom: 5px;
          margin-left: -70px;
          padding: 10px;
          width: 200px; 
          -webkit-border-radius: 0;
          -moz-border-radius: 0;
          border-radius: 5px;
          background-color: #66cc33;
          /*background-color: hsla(0, 0%, 20%, 0.9);*/
          color: #fff;
          content: attr(data-tooltip);
          text-align: center;
          font-size: 14px;
          line-height: 18px;
          border: 2px solid #66cc33;
        }
        
        /* Triangle hack to make tooltip look like a speech bubble */
        [data-tooltip]:after {
          position: absolute;
          bottom: 100%;
          left: 48%;
          margin-left: -5px;
          width: 0;
          border-top: 5px solid #66cc33;
          /*border-top: 5px solid hsla(0, 0%, 20%, 0.9);*/
          border-right: 5px solid transparent;
          border-left: 5px solid transparent;
          content: " ";
          font-size: 0;
          line-height: 0;
        }
        
        /* Show tooltip content on hover */
        [data-tooltip]:hover:before,
        [data-tooltip]:hover:after {
          visibility: visible;
          -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
          filter: progid: DXImageTransform.Microsoft.Alpha(Opacity=100);
          opacity: 1;
        }
        
        .metrics-block{max-height: 307px; overflow-y: auto;}
        .metrics-block::-webkit-scrollbar {width: 5px;} 
        .metrics-block::-webkit-scrollbar-track {background: #f1f1f1;}
        .metrics-block::-webkit-scrollbar-thumb {background: #888;}
        .metrics-block::-webkit-scrollbar-thumb:hover {background: #555;}
        
        .help{font-weight: bold; cursor: pointer;}
        .help i{color: #66cc33;}
        text tspan[style="font-style:italic"] { fill: red; font-style: unset !important; }
    </style>
    <!--Navigation-->
    <apex:outputPanel id="charts" >
  
      <script type="text/javascript">   
          var m ;
          var ro;
          var ct ;
          var maxsz;
          var maxszm;
          var maxszmr; 
                 
                  JCharLabels = JSON.parse('{!JSENCODE(CharLabels)}');
                  JCharLabelsM = JSON.parse('{!JSENCODE(CharLabelsM)}');
                  JCharLabelsMR = JSON.parse('{!JSENCODE(CharLabelsMR)}');
                  
                  clabels = JSON.parse('{!JSENCODE(charLabels)}');
                  clabelsm = JSON.parse('{!JSENCODE(charLabelsM)}');
                  clabelsmr = JSON.parse('{!JSENCODE(charLabelsMR)}');
                  clabelsArr = [];
                  maxsz =clabels.length - 1;
                  if(maxsz > 9){
                  maxsz =9;
                  }
                  maxszm =clabelsm.length - 1;
                  if(maxszm > 9){
                  maxszm =9;
                  }
                  maxszmr =clabelsmr.length - 1;
                  if(maxszmr > 9){
                  maxszmr =9;
                  }
                  
                  for ( let i=0; i < clabels.length ; i++)
                  {
                      
                      clabelsArr[i] = clabels[i];
                  }
                  plabel =[];
                  pimp =[];
                  pid = [];
                  var pdata= [];
               /*    <apex:repeat value="{!pielabel}" var="p">
                      plabel.push('{!JSENCODE(p)}');
                  </apex:repeat>
                  <apex:repeat value="{!pieimp}" var="p">
                      pimp.push({!p});
                  </apex:repeat>
                  
                  <apex:repeat value="{!pieid}" var="p1">
                      pid.push('{!p1}');
                  </apex:repeat>
                  
                  for(var i=0; i < plabel.length; i++) {
                    pdata.push({
                        name: plabel[i],
                        y: pimp[i],
                        id: pid[i]      
                    });        
                    }   */
                                            
                  gmetricname =[];
                  gteamScore=[];
                  highPerfScore= [];
                  ggap = [];
                  
                  <apex:repeat var="v" value="{!tableVals}">
                      gmetricname.push('{!v.metricName}');
                      gteamScore.push({!v.teamScore});
                      highPerfScore.push({!v.highPerfScore});
                      ggap.push({!v.gap});
                  
                      
                      
                     pdata.push({ name: '{!v.metricName}', y: {!v.imporCoeff}, id: '{!v.metricId}'});
                  </apex:repeat>
                   
                   var fssr ='{!Fssr}';
                    
            /*Charts */
           function showChart(){
                 $("#ssname").text('{!JSENCODE(sname)}');
                 GenerateChart();
                 m ="{!JSENCODE(Mname)}";
                 ro = '{!JSENCODE(fw.selectedLevelThree)}';
                 
                  
                 
              /*   if(ro =='All' || ro == ''){
                     $(".cr").css("display", "block");
                     $("#ms").css("display", "block");
                 }else{
                     $(".cr").css("display", "none");
                     $("#ms").css("display", "none");
                 } */
                 
             }
                         
             function GenerateChart(){
             
              $('#certScore').highcharts({
                
                 credits: {
                  enabled: false
                  },
                
                 chart: {
                        type: 'bar'
                    },
                     title: {
                        text: 'Employee Distribution -  '+'Funnelocity Qualitative Score',
                        x: 0, //center
                        style: {
                            color: '#333333',
                             
                        }
                    },
                    xAxis: {
                        categories: JCharLabels,
                            labels:{
                             style:{
                                 color: '#333333',
                                 fontSize:'13px'
                              }  
                            },
                            
                            min: 0,
                            max: maxsz,
                           scrollbar: {
                            enabled: true
                            },
                            
                    },
                    
                    yAxis: {
                        min: 0,
                        labels: {
                                   
                                style: {
                                    color: '#333333'
                                }
                            },
                        title: {
                            text: 'Percentage',
                            style:{
                                        color: '#333333'
                              } 
                        }
                    },
                    colors: [
                        '#EF412F',
                        '#ff9900',
                        '#fece1a',
                        '#00b2ee',
                        '#66cc33',
                    ],
                    legend: {
                        reversed: true
                    },
                    plotOptions: {
                        series: {
                            stacking: 'percent'
                        }
                    },
                    tooltip: {
                        pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',
                        shared: true
                    },
                    series: [{
                        name: 'Needs Improvement',
                        data: {!Lps}
                    }, {
                        name: 'Marginal',
                        data: {!Mps}
                    },{
                        name: 'Average',
                        data: {!Aps}
                    },{
                        name: 'Strong',
                        data: {!Sps}
                    }, {
                        name: 'Outstanding',
                        data: {!Hps}
                    }]
                });
                
                
               
                
                $('#pie').highcharts({
                      
                       credits: {
                      enabled: false
                      },
                      colors: [
                        '#43489b',
                        '#6065a8',
                        '#7c81b8',
                        '#989cc6',
                        '#B4B7D4',
                    ],
                        chart: {
                            renderTo: 'pie',
                            type: 'pie',
                             
                           },
                        
                         title: {
                          verticalAlign: 'middle',
                          floating: true,
                          text: '{!piefs}',
                          y: 30,
                                style: {
                                  fontWeight: 'normal',
                                  fontSize: '31px',
                                  color:'#333333'
                                },
                          },
                          subtitle: {
                            text: 'Significant Qualitative Measures for '+'{!JSENCODE(role)}',
                            style: {
                                  fontWeight: 'normal',
                                  fontSize: '18px',
                                  color:'#333333'
                                },
                            },
                        tooltip: {
                        pointFormat: ' <b>{point.percentage:.1f}%</b>'
                          },
                        plotOptions: {
                            pie: {
                                allowPointSelect: true,
                                cursor: 'pointer',
                                size: '75%',
                                innerSize: '60%',
                                dataLabels: {
                                    enabled: true,
                                    //color: 'red',
                                    style: { fontWeight:'normal', fontSize: '12.5px' }
                                },
                                slicedOffset: 20,
                            },
                             point: {
                                events: {
                                    legendItemClick: function () {
                                        console.log(this);
                                        //this.slice();
                                        this.series.slice();
                                    }
                                }
                            },
                             
                        },
                       
                             
                        
                        series: [{
                            data:  pdata,
                           
                            dataLabels: {
                                distance: 11,
                                
                                
                            },
                            point:{
                              events:{
                                  click: function (event) {
                                       
                                      Metric(this.id);
                                      if(onload1){
                                          onload1 = false;
                                          setTimeout(hidemetrictable,1800);
                                      }else{
                                          setTimeout(hidemetrictable,1000);
                                      }
                                  },
                            
                              }
                          },
                            sliced: true, 
                            }]
                         });

                          $('#gaptab').highcharts({
                
                             credits: {
                              enabled: false
                              },
                            
                             tooltip: {
                                    formatter: function () {
                                          
                                             return '<span style="font-size: 10px"> </span><br/> <span style="color:#666666">\u25CF</span>'+ '{!JSENCODE(sname)}' +': <b> '+gteamScore[this.series.xAxis.categories.indexOf(this.key)]
                                                    + '<span style="font-size: 10px"> </span><br/> <span style="color:#666666">\u25CF</span>High Performers: <b> '+ highPerfScore[this.series.xAxis.categories.indexOf(this.key)]+'</b>'
                                                    +'</b> <br/> <span style="color:#666666">\u25CF</span> Gap: <b>'+ ggap[this.series.xAxis.categories.indexOf(this.key)]+'</b>' ;  
                                         
                                    }
                                },
                            chart: {
                                    type: 'bar'
                                },
                                title: {
                                    text: 'Gap Analysis',
                                    x: 0 //center
                                },
                                     
                                xAxis: {
                                        categories: gmetricname,
                                        labels:{
                                             style:{
                                                 color: '#333333',
                                                 fontSize:'13px'
                                              }  
                                            },
                                        
                                },
                                
                              yAxis: {
                                    min: 0,
                                    max: 10,
                                     title: {
                                        text: 'Score',
                                            style: {
                                            color: '#333333'
                                        }
                                        
                                    },
                                    labels: {
                                   
                                        style: {
                                            color: '#333333'
                                        }
                                    },
                                    
                                },
                               
                                  
                                
                                legend: {
                               itemStyle: {
                                 fontSize:'12px',
                                 
                                 
                              },
                               width: 300,
        
                                align: 'center',
                                verticalAlign: 'bottom',
                                x: 0,
                                y: 0,
                                symbolWidth: 0,
                                symbolRadius: 0,
                                symbolPadding: 0,
                                symbolWidth: 0.1,
                                symbolHeight: 0.1,
                                labelFormatter: function() {
                                    return '<span style="color:#66cc33;font-Size:19px" >\u25CF</span> Outstanding (10) <span style="color:#fff;font-Size:1px">\u25CF</span> <span style="color:#00b2ee;font-Size:19px">\u25CF</span> Strong (8) <span style="color:#fff;font-Size:1px" >\u25CF</span><span style="color:#fece1a;font-Size:19px">\u25CF</span> Average (5) <br/><span style="color:#fff;font-Size:1px">\u25CF</span><br/>  <span style="color:#ff9900;font-Size:19px">\u25CF</span> Marginal (2) <span style="color:#fff;font-Size:1px" >\u25CF</span> <span style="color:#EF412F;font-Size:19px">\u25CF</span> Needs Improvement (0) ';
                                }
                               
                        },  
                                
                                plotOptions: {
                                    
                            series: {
                        
                              states: {
                                inactive: {
                                    opacity: 1
                                },
                                 
                              }
                        },
                                    bar: {
                                        minPointLength: 9,
                                          zones: [{
                                            value: 2,  
                                            color: '#EF412F'  
                                        },{
                                            value: 5,  
                                            color: '#ff9900',
                                             
                                        },{
                                            value: 8,  
                                            color: '#fece1a',
                                             
                                        },{
                                            value: 10,  
                                            color: '#00b2ee',
                                             
                                        },{
                                            value: 10.1,  
                                            color: '#66cc33',
                                        }]
                                    }
                                },
                                 
                                series: [{
                                    name: '{!JSENCODE(sname)}',
                                    data: gteamScore,
                                    events: {
                                    legendItemClick: function(e) {
                                        e.preventDefault()
                                        }
                                      } 
                                     
                                },
                                {   
                                    showInLegend: false,
                                    colorByPoint: false,
                                    name: 'High Performers',
                                    data: highPerfScore ,
                                     
                                     
                                      
                                 },
                                
                                ]
                            });
                         
                         showMetric();
             }
          
            function showMetric(){
                 ct = '{!calculationType}';
                console.log('ct ',ct );
                
                $('#Metric').highcharts({
                 
                 credits: {
                  enabled: false
                  },
                
                 chart: {
                        type: 'bar'
                    },
                     title: {
                        text: '{!JSENCODE(role)}'+ ' Distribution - '+ "{!JSENCODE(Mname)}",
                        x: 0, //center
                        style: {
                            color: '#333333',
                             
                        }
                         
                    },
                    xAxis: {
                        categories: JCharLabelsM,
                            labels:{
                             style:{
                                 fontSize:'13px',
                                 color: '#333333'
                              }  
                            },
                            min: 0,
                            max: maxszm ,
                           scrollbar: {
                            enabled: true
                            },
                    },
                    yAxis: {
                        min: 0,
                        labels: {
                                   
                                style: {
                                    color: '#333333'
                                }
                            },
                        title: {
                            text: "Percentage",
                            style:{
                                        color: '#333333'
                              } 
                        }
                    },
                    colors: [
                        '#EF412F',
                        '#ff9900',
                        '#fece1a',
                        '#00b2ee',
                        '#66cc33',
                    ],
                    legend: {
                        reversed: true
                    },
                    plotOptions: {
                        series: {
                            stacking: 'percent'
                        }
                    },
                    tooltip: {
                        pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',
                        shared: true
                    },
                    series: [{
                        name: 'Needs Improvement (0)',
                        data: {!Fas}
                    }, {
                        name: 'Marginal (2)',
                        data: {!Pos}
                    }, {
                        name: 'Average (5)',
                        data: {!Sas}
                    }, {
                        name: 'Strong (8)',
                        data: {!Gos}
                    }, {
                        name: 'Outstanding (10)',
                        data: {!Exs}
                    }]
                });
                
                $('#evaluation').highcharts({
               
                 credits: {
                  enabled: false
                  },
                
                 chart: {
                        type: 'bar'
                    },
                     title: {
                        text: '{!JSENCODE(role)} '+ 'Distribution - '+ "{!JSENCODE(Mname)}",
                        x: 0, //center
                        style: {
                            color: '#333333',
                             
                        }
                         
                    },
                    xAxis: {
                        categories: clabelsm ,
                            labels:{
                               
                             
                             style:{
                                 color: '#333333',
                                 fontSize:'13px'
                              }  
                            },
                            
                            min: 0,
                            max: maxszm ,
                           scrollbar: {
                            enabled: true
                            }
                    },
                    yAxis: {
                        min: 0,
                        labels: {
                                   
                                style: {
                                    color: '#333333'
                                }
                            },
                        title: {
                            text: "Percentage",
                            style:{
                                 color: '#333333',
                                 
                              } 
                        }
                    },
                    colors: [
                        '#EF412F',
                         
                        '#74cd59',
                    ],
                    legend: {
                        reversed: true
                    },
                    plotOptions: {
                        series: {
                            stacking: 'percent'
                        }
                    },
                    tooltip: {
                        pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',
                        shared: true
                    },
                    series: [{
                        name: 'No (0)',
                        data: {!Fas}
                    }, {
                        name: 'Yes (10)',
                        data: {!Exs}
                    }]
                });
                
                $('#evaluationreps').highcharts({
               
                 credits: {
                  enabled: false
                  },
                
                 chart: {
                        type: 'bar'
                    },
                     title: {
                        text:"{!JSENCODE(sname)}"+' Reps -'+ "{!JSENCODE(Mname)}",
                        x: 0, //center
                        style: {
                            color: '#333333',
                             
                        }
                         
                    },
                    tooltip: {
                                    formatter: function () {
                                          
                                         return '<span style="font-size: 10px"> </span><br/> <span style="color:#74cd59">\u25CF</span> Score: <b> '+this.y;
                                                      
                                         
                                    
                                    }
                                },
                    xAxis: {
                        categories: JCharLabelsMR,
                            labels:{
                                formatter: function() {
                                  
                                          var str = this.value;
                                          if(this.value.includes("(0.00)")){
                                              
                                              str = str.replace('0.00', '<em>0.00</em>');
                                               
                                          }
                                      return  str ;
                                    },
                             style:{
                                 fontSize:'13px',
                                 color: '#333333'
                              }  
                            },
                            
                            min: 0,
                            max: maxszmr ,
                           scrollbar: {
                            enabled: true
                            },
                    },
                    yAxis: {
                        min: 0,
                        max: 10,
                        labels: {
                                   
                                style: {
                                    color: '#333333'
                                }
                            },
                        title: {
                            text: "Score",
                            style:{
                                        color: '#333333'
                              } 
                        }
                    },
                    colors: [
                        '#EF412F',
                         
                        '#74cd59',
                    ],
                    legend: {
                        reversed: true
                    },
                    plotOptions: {
                        series: {
                            stacking: 'normal'
                    },
                         
                             
                        
                    },
                    
                    series: [{
                        name: 'No (0)',
                        data: {!FasR}
                    }, {
                        name: 'Yes (10)',
                        data: {!ExsR}
                    }]
                });

                $('#reps').highcharts({
                  
                 credits: {
                  enabled: false
                  },
                
                 chart: {
                        type: 'bar'
                    },
                     title: {
                        text:"{!JSENCODE(sname)}"+' Reps -'+ "{!JSENCODE(Mname)}",
                        x: 0, //center
                        style: {
                            color: '#333333',
                             
                        }
                         
                    },
                   /* tooltip: {
                                    formatter: function () {
                                          
                                         return '<span style="font-size: 10px"> </span><br/> <span style="color:#74cd59">\u25CF</span> Score: <b> '+this.y;
                                                      
                                         
                                    
                                    }
                                }, */
                    xAxis: {
                        categories: JCharLabelsMR,
                            labels:{
                                 formatter: function() {
                                  
                                          var str = this.value;
                                          if(this.value.includes("(0.00)")){
                                              
                                              str = str.replace('0.00', '<em>0.00</em>');
                                               
                                          }
                                      return  str ;
                                    },
                             style:{
                                 fontSize:'13px',
                                 color: '#333333'
                              }  
                            },
                            min: 0,
                            max: maxszmr ,
                           scrollbar: {
                            enabled: true
                            },
                    },
                    yAxis: {
                        min: 0,
                        max: 10,
                        labels: {
                                   
                                style: {
                                    color: '#333333'
                                }
                            },
                        title: {
                            text: "Score",
                            style: {
                                        color: '#333333'
                                    }
                        }
                    },
                    colors: [
                        '#EF412F',
                        '#ff9900',
                        '#fece1a',
                        '#00b2ee',
                        '#66cc33',
                    ],
                    legend: {
                        reversed: true
                    },
                    plotOptions: {
                        series: {
                            stacking: 'normal'
                        },
                         
                             
                        
                    },
                    
                    series: [{
                        name: 'Needs Improvement (0)',
                        data: {!FasR}
                    }, {
                        name: 'Marginal (2)',
                        data: {!PosR}
                    }, {
                        name: 'Average (5)',
                        data: {!SasR}
                    }, {
                        name: 'Strong (8)',
                        data: {!GosR}
                    }, {
                        name: 'Outstanding (10)',
                        data: {!ExsR}
                    }]
                }); 
            }
          
              
            
            function hidemetrictable(){
                
                if($('#pie').has('.highcharts-point-select').length > 0){
                       $('#metmsg').fadeOut("slow");
                        if(ct == 'Evaluation'){
                               
                            $("#evaluationhide").fadeIn(2000);
                            $('#methide').fadeOut("slow");
                        }else{
                              
                            $('#methide').fadeIn(2000);
                            $('#evaluationhide').fadeOut("slow");
                       }
                       
                      
                  }else{
                      $('#evaluationhide').fadeOut("slow");
                      $('#methide').fadeOut("slow");
                      $('#metmsg').fadeIn("slow");
                  }
            }
      
    </script>
   </apex:outputPanel>
    <apex:form >
     
            <apex:actionFunction name="Metric" action="{!Metric}" rerender="charts,Metric,nm,re,tn" oncomplete="showMetric();">       
                 <apex:param value="" name="mid" assignTo="{!mid}" id="mid" />
            </apex:actionFunction> 
         
            <div class="slds-scope">
                <div class="myapp">
                    <!--Navigation-->
                <div class="slds-grid slds-wrap slds-form-element slds-p-around_small">
                    <div class="slds-size_1-of-1">
                        <div class="navigation">
                            <ul>
                                <li class="home"><apex:commandLink action="{!navigateToHomePage}"><i class="fas fa-home"></i></apex:commandLink></li>
                                <li class="scorenav"><apex:commandLink action="{!navigateToCertification}"> FUNNELOCITY SCORING</apex:commandLink></li>
                                <li><apex:commandLink action="{!navigateToDashboard}"><span><i class="fas fa-tachometer-alt"></i></span> PERFORMANCE DASHBOARD</apex:commandLink></li>
                                <!--<li><apex:commandLink action="{!navigateToReportsPage}"><i class="fas fa-chart-bar"></i> REPORTING</apex:commandlink></li> -->
                                <li class="reportnav"> <i class="fas fa-chart-bar"></i> REPORTING 
                                    <ul class="subnav">
                                        <li><apex:commandLink action="{!navigateToCertificateReports}">Funnelocity Reports</apex:commandLink></li>
                                        <!--<li><apex:outputLink value="{!managemenetReports['mXaDybYGcSDujlyIRRJQxUrUEqXiFe']}" target="_blank">Certification Dashboard</apex:outputLink></li>-->                                                                                        
                                        <li><apex:commandLink action="{!navigateToReportsPage}">Sales Management Reports</apex:commandLink></li>
                                        <li><apex:commandLink action="{!navigateToAnnualizationDashboard}">Tenured and New Hire Performance Dashboard</apex:commandLink></li>
                                    </ul>
                                </li>
                                <!--<li class="reportnav funnelanalyticsnav " > <apex:commandLink > FUNNELOCITY ANALYTICS </apex:commandLink> </li>   -->
                               
                                <li class="reportnav funnelanalyticsnav " >   <apex:commandLink > FUNNELOCITY ANALYTICS </apex:commandLink>  
                                    <ul class="subnav">
                                        <li><apex:commandLink action="{!navigateToFunnelAnalytic}">Funnelocity Quantitative Scoring</apex:commandLink></li>
                                        <li><a>Funnelocity Qualitative Scoring</a></li>
                                        <!--<li><apex:commandLink action="{!navigateToEinsteinAnalyticsDashboard}">Einstein Analytics </apex:commandLink></li>-->
                                    </ul>
                               </li>
                                    <!--<ul class="subnav">
                                        <li><apex:commandLink action="{!navigateToCertificateReports}">Certification Reports</apex:commandLink></li>
                                        <li><apex:commandLink action="{!navigateToReportsPage}">Sales Management Reports</apex:commandLink></li>
                                    </ul>-->
                                                                                                   
                                <li><apex:commandLink action="{!navigateToCalculator}"><i class="fas fa-calculator"></i> METRICS CALCULATOR</apex:commandLink></li>
                                <li style="display:none"><apex:commandLink ><i class="fas fa-star"></i> TERRITORY PLAN</apex:commandLink></li>
                                <li style="display:{!appsetup};"><apex:commandLink action="{!navigateToAppSetup}"><i class="fas fa-cog"></i> APP SETUP</apex:commandLink></li>
                                
                            </ul>
                        </div>
                    </div>
                </div> 
                 
                <!--Navigation-->
                    <apex:actionFunction id="breadCrumClick" name="breadCrumClick" action="{!breadCrumClick}" rerender="roleList,levels,levelList" oncomplete="validateSave();">
                        <apex:param value="" name="crumValue" assignTo="{!crumValue}" />
                        <apex:param value="" name="levelValue" assignTo="{!levelValue}" />
                    </apex:actionFunction>
                    <div class="slds-grid slds-wrap slds-form-element" style="background: #f5f5f9;">
                        <div class="slds-p-around_small" style="color: #333333; font-size: 16px; position: absolute; right: 0; top: 0;z-index: 1;">
                            <span class="help" style="float: left; line-height: 18px;">Help <i style="font-size: 18px; margin: 0 0 0 5px; float: right;" class="fa fa-question-circle" aria-hidden="true"></i></span>
                        </div>
                        <div class="slds-col">
                             
                            <div class="slds-grid slds-wrap slds-form-element" style="background: #f5f5f9;padding-bottom: 10px;padding-top: 10px;">
                    <div class="slds-col">
                    
                        <script type="text/javascript">
                           var onload1 = true;
                          
                           var repVal ;
                           var repupdate = false;
                           var crumb = '{!defaultBreadCrumb}';
                            $(document).ready(function(){                                       
                                var option;
                                $(".crumbClass").html(crumb);
                                
                                
                                showfs();                                    
                                
                            });
                            
                            function addCrumb(obj,levelValue){
                                     
                                    option = $(obj).find('option:selected').text();
                                    if(option != '--Select--' && option != 'All'){
                                        if(crumb == ''){
                                            crumb = option;                                                            
                                        }else if(repVal =='Rep' && !repupdate ){
                                            crumb = crumb + '&nbsp> ' +option;
                                            repupdate = true;
                                        }else if(repVal =='Rep' && repupdate ){
                                             
                                            crumb = crumb.slice(0, crumb.lastIndexOf('>')) +'> ' + option;
                                            
                                        }else { 
                                            crumb = crumb + '&nbsp>&nbsp '+`   <a onclick="breadCrumClick1('${option}','${levelValue}')">`+ option+ '</a>' ;
                                            
                                        }
                                        }else if(option == 'All'){
                                        crumb = crumb.slice(0, crumb.lastIndexOf('>'));
                                    }
                                    $(".crumbClass").html(crumb);
                                    
                                }
                                
                                function repva(rv){
                                    repVal = rv;
                                     
                                }
                                
                                function breadCrumClick1(v,l){
                                    repupdate = false;
                                    breadCrumClick(v,l);
                                    crumb = crumb.slice(0, crumb.lastIndexOf(v+'</a>'))+v+'</a>';
                                    $(".crumbClass").html(crumb);
                                 
                               }
                            
                            function sfcall(obj){
                                sf($(obj).val());
                            }
                                                                                           
                        </script> 
                        
                        <apex:outputPanel id="crumbText">
                        
                            <script type="text/javascript">
                                function reloadCrumb(){
                                    crumb = '{!defaultBreadCrumb}';
                                    $(".crumbClass").html(crumb);
                                    repupdate = false;
                                }
                            </script>
                            <apex:outputText styleClass="crumbClass slds-p-around_small slds-grid" style="color: #333333; font-size: 18px; font-weight: 300;padding-top: 0;padding-bottom: 10px;">                                
                            </apex:outputText>
                        </apex:outputPanel>
                        <apex:outputPanel id="filtersPanel">
                            <apex:actionStatus id="filterStatus">                                
                                <apex:facet name="stop">
                                    <apex:outputPanel >
                                        <div class="slds-grid slds-wrap">                                
                                            <div class="slds-large-size_8-of-8 slds-small-size_1-of-1">
                                                
                                                <div class="slds-grid"> 
                                                    <apex:outputPanel id="levels" styleclass="slds-col slds-size_1-of-3"> 
                                                        <label class="slds-form-element__label slds-text-heading_medium slds-p-left_small" style="font-size: 21px; font-weight: bold; color: #7e8793;" for="select-01">{!fw.labelOne}</label>                              
                                                        <div class="slds-form-element__control slds-p-around_small" style="margin: -10px 0 0 0;">
                                                            <div style="position: relative;">
                                                                <!--  <apex:actionRegion > -->
                                                                    <apex:selectList size="1" disabled="{!IF(NOT(fw.isRep),false,true)}" value="{!fw.SelectedLevelOne}" styleClass="slds-select slds-text-heading_medium slds-p-around_x-small" id="select-01" style="color: #7e8793; font-size: 21px; border-radius: 0; height: auto; padding: 6px 30px 6px 8px;">
                                                                        <apex:actionSupport status="filterStatus" event="onchange" onComplete="reloadCrumb();validateSave();" action="{!levelOneAction}" rerender="levelList,roleList,crumbText"/>
                                                                        <apex:selectoptions value="{!fw.levelOne}"> 
                                                                        </apex:selectoptions>                                                
                                                                    </apex:selectList> 
                                                                <!--  </apex:actionRegion > -->
                                                            </div>
                                                        </div>
                                                        <apex:outputText style="color:red; display:none;margin: 0px 0px 0px 75px; font-size: 15px;" value="Please select a value" id="validlevel"></apex:outputText>
                                                    </apex:outputPanel> 
                                                    <apex:outputPanel id="levelList" styleclass="slds-col slds-size_1-of-3">
                                                        <label class="slds-form-element__label slds-text-heading_medium slds-p-left_small" style="font-size: 21px; font-weight: bold; color: #7e8793;" for="select-02">{!fw.labelTwo}{!IF(fw.labelTwo =='Rep','  Name','')}</label>
                                                        <div class="slds-form-element__control slds-p-around_small" style="margin: -10px 0 0 0;">
                                                            <div style="position: relative;">
                                                                <apex:actionRegion >
                                                                    <apex:selectList disabled="{!IF(AND(NOT(ISNULL(fw.SelectedLevelOne)),NOT(fw.SelectedLevelOne='--Select--'),NOT(ISBLANK(fw.SelectedLevelOne)),NOT(fw.isRep)),false,true)}" size="1" value="{!fw.SelectedLevelTwo}" styleClass="slds-select slds-text-heading_medium slds-p-around_x-small" id="select-02" style="color: #7e8793; font-size: 21px; border-radius: 0; height: auto; padding: 6px 30px 6px 8px;">
                                                                        <apex:actionSupport status="filterStatus" event="onchange" onComplete="addCrumb(this,'{!fw.labelOne}');validateSave();" action="{!levelTwoAction}" onbeforedomupdate="repva('{!fw.labelTwo}')" rerender="roleList,levels,levelList,crumbText" />
                                                                        <apex:selectoptions value="{!fw.levelTwo}"> 
                                                                        </apex:selectoptions>                                                        
                                                                    </apex:selectList> 
                                                                </apex:actionRegion>
                                                            </div>
                                                        </div>
                                                        <apex:outputText style="color:red; display:none;margin: 0px 0px 0px 75px; font-size: 15px;" value="Please select a value" id="validname"></apex:outputText>
                                                    </apex:outputPanel>
                                                    
                                                    <apex:outputPanel id="roleList" styleclass="slds-col slds-size_1-of-3">
                                                        <label class="slds-form-element__label slds-text-heading_medium slds-p-left_small" style="font-size: 21px; font-weight: bold; color: #7e8793;" for="select-03">{!fw.labelThree}</label>
                                                        
                                                        <div class="slds-form-element__control slds-p-around_small" style="margin: -10px 0 0 0;">
                                                            <div style="position: relative;">
                                                            <apex:actionRegion >
                                                                <apex:selectList disabled="{!IF(AND(NOT(ISNULL(fw.SelectedLevelOne)),NOT(ISNULL(fw.SelectedLevelTwo)),NOT(ISBLANK(fw.SelectedLevelOne)),NOT(ISBLANK(fw.SelectedLevelTwo)),NOT(fw.disableLevelThree),NOT(fw.isRep)),false,true)}" size="1" value="{!fw.SelectedLevelThree}" styleClass="slds-select slds-text-heading_medium slds-p-around_x-small" id="select-03" style="color: #7e8793; font-size: 21px; border-radius: 0; height: auto; padding: 6px 30px 6px 8px;">
                                                                    <apex:actionSupport status="filterStatus" event="onchange" rerender="" oncomplete="validateSave();"/>
                                                                    <apex:selectoptions value="{!fw.levelThree}"> 
                                                                    </apex:selectoptions>                                                        
                                                                </apex:selectList>
                                                            </apex:actionRegion>  
                                                            </div>
                                                        </div>
                                                        <apex:outputText style="color:red; display:none;margin: 0px 0px 0px 75px; font-size: 15px;" value="Please select a value" id="validmgr"></apex:outputText>
                                                    </apex:outputPanel>                                                                                                                                              
                                                </div>
                                            </div>
                                            
                                            <apex:actionFunction name="show" action="{!showUpdated}" rerender="detailsPanel,filtersPanel,mg,charts,tn,tn1,gaptable,impMsg,topname,metblock" oncomplete="showChart();showfs();"/>     
                                            
                                      
                                                                                 
                                        </div>
                                    </apex:outputPanel>
                                </apex:facet>
                                                                                                
                                <apex:facet name="start">
                                    <apex:outputPanel >
                                        <div class="slds-grid slds-wrap">                                
                                            <div class="slds-large-size_8-of-8 slds-small-size_1-of-1">
                                                <div class="slds-grid">                                                 
                                                    <apex:outputPanel styleclass="slds-col slds-size_1-of-3"> 
                                                        <label class="slds-form-element__label slds-text-heading_medium slds-p-left_small" style="font-size: 21px; font-weight: bold; color: #7e8793;" for="select-01">Select Level</label>                              
                                                        <div class="slds-form-element__control slds-p-around_small" style="margin: -10px 0 0 0;">
                                                            <div style="position: relative;">
                                                                <apex:selectList size="1" disabled="true" styleClass="slds-select slds-text-heading_medium slds-p-around_x-small" style="color: #7e8793; font-size: 21px; border-radius: 0; height: auto; padding: 6px 30px 6px 8px;">
                                                                    <apex:selectoption itemValue="Level" itemLabel="Level"> 
                                                                    </apex:selectoption>                                               
                                                                </apex:selectList> 
                                                            </div>
                                                        </div>
                                                    </apex:outputPanel> 
                                                    <apex:outputPanel styleclass="slds-col slds-size_1-of-3"> 
                                                        <label class="slds-form-element__label slds-text-heading_medium slds-p-left_small" style="font-size: 21px; font-weight: bold; color: #7e8793;" for="select-01">Select Level</label>                              
                                                        <div class="slds-form-element__control slds-p-around_small" style="margin: -10px 0 0 0;">
                                                            <div style="position: relative;">
                                                                <apex:selectList size="1" disabled="true" styleClass="slds-select slds-text-heading_medium slds-p-around_x-small" style="color: #7e8793; font-size: 21px; border-radius: 0; height: auto; padding: 6px 30px 6px 8px;">
                                                                    <apex:selectoption itemValue="Level" itemLabel="Level"> 
                                                                    </apex:selectoption>                                               
                                                                </apex:selectList>   
                                                            </div>
                                                        </div>
                                                    </apex:outputPanel>
                                                    
                                                    <apex:outputPanel styleclass="slds-col slds-size_1-of-3"> 
                                                        <label class="slds-form-element__label slds-text-heading_medium slds-p-left_small" style="font-size: 21px; font-weight: bold; color: #7e8793;" for="select-01">Select Role</label>                              
                                                        <div class="slds-form-element__control slds-p-around_small" style="margin: -10px 0 0 0;">
                                                            <div style="position: relative;">
                                                                <apex:selectList size="1" disabled="true" styleClass="slds-select slds-text-heading_medium slds-p-around_x-small" style="color: #7e8793; font-size: 21px; border-radius: 0; height: auto; padding: 6px 30px 6px 8px;">
                                                                    <apex:selectoption itemValue="Role" itemLabel="Role"> 
                                                                    </apex:selectoption>                                               
                                                                </apex:selectList>     
                                                            </div>
                                                        </div>
                                                    </apex:outputPanel>                                                                                                                                                                                                                                             
                                                </div>
                                            </div>
                                            
                                             
                                                                                                                                              
                                        </div>
                                    </apex:outputPanel>
                                </apex:facet>                                                                                                
                                
                            </apex:actionStatus>
                        </apex:outputPanel>
                    </div>
                </div>
                            
                            
                            
                                
                        </div>
                    </div>
                                                                                    
                </div>
            </div>
        <div class="slds-grid slds-wrap slds-p-around_small">
            <div class="slds-grid slds-wrap" style="background: #fff; display: table; width: 100%;">
                <div class="slds-small-size_1-of-1" id="topname">
                    <div class="slds-text-align_center slds-p-around_medium slds-small-size_1-of-1" style="background: #7e8793;">
                        <div class="slds-text-body_regular" style="color:#ffffff; font-size: 24px; line-height:22px;" >How is <span id="ssname"> </span> performing?</div>
                    </div>
                </div>
                <div id='certScore' class="slds-grid slds-size_1-of-1 slds-p-around_large" style="background: #fff; border: 1px solid #d8dde6;margin: 10px 0px 10px 0;">

                </div>
                <apex:outputPanel id="metblock">
                 <apex:outputPanel rendered="{!IF(OR(AND(fw.selectedLevelThree != '',fw.selectedLevelThree != 'All'),AND(fw.selectedLevelTwo != 'All',fw.labelTwo == 'Rep')),False,True)}">
                        <div class="slds-small-size_1-of-1 slds-grid slds-p-top_medium"  >   
                        <div class="slds-large-size_8-of-8" style="text-align: center; font-size: 29px;  padding-top: 10px; border: 1px solid #d8dde6; min-height: 450px;">
                            Select a role to view more details
                        </div>
                    </div>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!IF(OR(AND(fw.selectedLevelThree != '',fw.selectedLevelThree != 'All'),AND(fw.selectedLevelTwo != 'All',fw.labelTwo == 'Rep')),True,False)}">
                <div class="slds-small-size_1-of-1">
                    <apex:outputPanel id="impMsg">
                        <div class="slds-text-align_center slds-p-around_medium slds-small-size_1-of-1" style="background: #00b2ee;">
                             <div class="slds-text-body_regular" style="color:#ffffff; font-size: 18px;"><span style="font-size: 20px;">Recommended Focus:</span> {!firstImp} and {!secondImp}.</div>
                        </div>
                    </apex:outputPanel>
                </div>
                    
                       
                    <div class="slds-small-size_1-of-1 slds-grid slds-p-top_medium">
                        <div class="slds-large-size_5-of-8">
                           <!--  <apex:image value="{!URLFOR($Resource.Analytic,'/Analytics/img1.jpg')}"/>  
                           <div id="addText"  style="position:absolute;  ">Head</div> -->
                           <div id='pie'  style="min-width: 500px; height: 450px; margin: 0 20px 0 0; background: #fff; border: 1px solid #d8dde6;   ">  

                            </div>
                        
                        </div>
                        <div class="slds-large-size_3-of-8">
                            <div id='gaptab'  style="min-width: 400px; height: 450px; background: #fff; border: 1px solid #d8dde6;   ">  
                                 
                            </div>
                        
                        </div>
                    </div>
                    
                        
                        <div class="slds-small-size_1-of-1 slds-grid slds-p-top_medium"  id="evaluationhide">
                            <div class="slds-large-size_5-of-8">
                                <div id='reps'  style="min-width: 500px; height: 450px; background: #fff; border: 1px solid #d8dde6; margin: 0 20px 0 0; width: auto !important;">  
                                </div>
                                
                            </div>
                            <div class="slds-large-size_3-of-8">
                                <div id='Metric' style="min-width: 400px; height: 450px;  background: #fff; border: 1px solid #d8dde6; width: auto !important;">
                                     
                                </div>
                            </div>
                        </div>
                         
                        
                         
                     
                    <div class="slds-small-size_1-of-1 slds-grid slds-p-top_medium" id="methide"  >
                        
                        <div class="slds-large-size_5-of-8">
                            <div id='evaluationreps'  style="min-width: 500px; height: 450px; background: #fff; border: 1px solid #d8dde6;margin: 0 20px 0 0; width: auto !important;   ">  

                            </div>
                        </div>             
                        <div class="slds-large-size_3-of-8">
                            <div id='evaluation' style="min-width: 400px; height: 450px;  background: #fff; border: 1px solid #d8dde6; width: auto !important;">
                                 
                            </div>
                        </div>
                        
                     
                    </div>
                    <div class="slds-small-size_1-of-1 slds-grid slds-p-top_medium" id="metmsg"  >   
                        <div class="slds-large-size_8-of-8" style="text-align: center; font-size: 29px;  padding-top: 10px; border: 1px solid #d8dde6; min-height: 450px; width: 100%;">
                            Select a metric in the donut chart to view more details
                        </div>
                    </div>
                    <script type="text/javascript">
                         $('#methide').hide();
                         $('#evaluationhide').hide();
                    </script>
                </apex:outputPanel>
                </apex:outputPanel>
            </div>
        </div>
                            
    </apex:form>
    <!--<script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>-->
    <!--<apex:includeScript value="{!URLFOR($Resource.DesignFolder,'DesignFiles/Design/jquery.js')}"/>-->
    <script type="text/javascript">
        showChart();
        function validateSave(){
            var inp1 = $('[id$=select-01]').val();
            var inp2 = $('[id$=select-02]').val();
            var inp3 = $('[id$=select-03]').val();
            
            var validSave = 'true';
            
            console.log(inp1 );
            console.log(inp2 );
            console.log(inp3 );
            if(inp1 == '--Select--'){
                $('[id$=validlevel]').css("display","block");
                validSave = 'false';
            }
            if(inp2 == '--Select--'){
                $('[id$=validname]').css("display","block");
                validSave = 'false';
            }
            if(inp3 == '--Select--'){
                $('[id$=validmgr]').css("display","block");
                validSave = 'false';
            }
           
            console.log(validSave);
            if(validSave == 'true'){
                console.log(validSave); 
                $('[id$=validlevel]').css("display","none");
                $('[id$=validname]').css("display","none");
                $('[id$=validmgr]').css("display","none");
                
                show();
            }
        }
        
         function clr(){

          /*  var mn = '{!Mname}';
            console.log(m);
            $(".cr").each(function(){
                _this=$(this);
             //   console.log(_this.attr("data-va"));
                if(_this.attr("data-va")== m){
                    _this.css({'background' : '#67d9ff','color' : '#FFF' });
                   // console.log('aab0b8');
                }else{
                    _this.css({'background' : '#FFF','color' : '#333333'});
                    // console.log('fff');
                }
            });
            $("#sp").text(m);
            $("#spt").text(m); */
        }
        function showfs(){
          /*   $("#certScore").css("display", "block");
             $("#Metric").css("display", "none");
             $("#evaluation").css("display", "none");
             $(".cr").css({'background' : '#FFF','color' : '#333333'});
             $("#fcolor").css({'background' : '#00b2ee','color' : '#FFF'});
              $("#ms").css({'background' : '#aab0b8','color' : '#FFF'});
             $("#sp").text('Qualitative Score');
             $("#spt").text('Qualitative Score'); */
        }
        function showms(){
          /*  console.log('ct'+ct);
            $("#certScore").css("display", "none");
            if(ct == 'Evaluation'){
                $("#evaluation").css("display", "none");
                $("#Metric").css("display", "block");
            }else{
                $("#Metric").css("display", "none");
                $("#evaluation").css("display", "block");
            }
            
            $("#fcolor").css({'background' : '#aab0b8'});
            $("#ms").css({'background' : '#00b2ee'});
            
            */
        }
    </script>
</apex:page>